{
  "openapi": "3.0.3",
  "info": {
    "title": "Thing API",
    "version": "1.0.0"
  },
  "externalDocs": {
    "url": "https://github.com/matthew-shaw/fastapi-vs-flask",
    "description": "GitHub"
  },
  "servers": [
    {
      "url": "http://localhost:{port}/{version}",
      "description": "Local",
      "variables": {
        "port": {
          "default": "5000"
        },
        "version": {
          "default": "v1"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Thing",
      "description": "Operations on the Thing resource"
    }
  ],
  "paths": {
    "/things": {
      "get": {
        "summary": "Retrieve a list of things",
        "operationId": "list_things",
        "tags": ["Thing"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name to filter by",
            "required": false,
            "example": "Apple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "colour",
            "in": "query",
            "description": "Colour to filter by",
            "required": false,
            "example": "red",
            "schema": {
              "type": "string",
              "enum": [
                "red",
                "green",
                "blue",
                "yellow",
                "orange",
                "purple",
                "black",
                "white"
              ]
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Quantity to filter by",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Attribute to sort on",
            "required": true,
            "example": "created_at",
            "schema": {
              "type": "string",
              "enum": ["name", "colour", "quantity", "created_at", "updated_at"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of sorted attribute",
            "required": true,
            "example": "desc",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThingResponse"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          }
        }
      },
      "post": {
        "summary": "Create a thing",
        "operationId": "create_thing",
        "tags": ["Thing"],
        "requestBody": {
          "description": "New thing data to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThingRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingResponse"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "URL of the new thing",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable"
          },
          "415": {
            "description": "Unsupported media type"
          }
        }
      }
    },
    "/things/{thing_id}": {
      "get": {
        "summary": "Retrieve a thing",
        "operationId": "get_thing",
        "tags": ["Thing"],
        "parameters": [
          {
            "name": "thing_id",
            "in": "path",
            "description": "ID of the thing to retrieve",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          }
        }
      },
      "put": {
        "summary": "Update a thing",
        "operationId": "update_thing",
        "tags": ["Thing"],
        "parameters": [
          {
            "name": "thing_id",
            "in": "path",
            "description": "ID of the thing to update",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Thing data to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "405": {
            "description": "Method not allowed"
          },
          "406": {
            "description": "Not acceptable"
          },
          "415": {
            "description": "Unsupported media type"
          }
        }
      },
      "delete": {
        "summary": "Delete a thing",
        "operationId": "delete_thing",
        "tags": ["Thing"],
        "parameters": [
          {
            "name": "thing_id",
            "in": "path",
            "description": "ID of the thing to delete",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "405": {
            "description": "Method not allowed"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ThingRequest": {
        "type": "object",
        "required": ["name", "colour", "quantity"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Apple",
            "maxLength": 32
          },
          "colour": {
            "type": "string",
            "enum": [
              "red",
              "green",
              "blue",
              "yellow",
              "orange",
              "purple",
              "black",
              "white"
            ]
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 4
          }
        }
      },
      "ThingResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Apple",
            "maxLength": 32
          },
          "colour": {
            "type": "string",
            "enum": [
              "red",
              "green",
              "blue",
              "yellow",
              "orange",
              "purple",
              "black",
              "white"
            ]
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-04-20T22:04:51.583801+01:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2021-04-20T22:16:57.492478+01:00"
          }
        }
      }
    }
  }
}
